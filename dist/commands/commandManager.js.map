{"version":3,"file":"commandManager.js","sourceRoot":"","sources":["../../src/commands/commandManager.ts"],"names":[],"mappings":";;AAEA,MAAqB,cAAc;IACzB,MAAM,CAAC,SAAS,GAAiC,IAAI,GAAG,EAAE,CAAC;IAE5D,MAAM,CAAC,GAAG,CAAC,OAAwB;QACxC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,QAAQ,EAAE,EAAE,OAAO,CAAC,CAAC;IAC3E,CAAC;IAEM,MAAM,CAAC,MAAM,CAAC,OAAwB;QAC3C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;IACrE,CAAC;IAEM,MAAM,CAAC,GAAG,CAAC,UAAkB,EAAE,QAAiB;QACrD,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,UAAU,IAAI,QAAQ,EAAE,CAAC,CAAC;IACzD,CAAC;;AAbH,iCAcC","sourcesContent":["import type { ICommandRequest } from \"../types\";\n\nexport default class CommandManager {\n  private static _commands: Map<string, ICommandRequest> = new Map();\n\n  public static add(command: ICommandRequest) {\n    this._commands.set(`${command.identifier}:${command.uniqueId}`, command);\n  }\n\n  public static remove(command: ICommandRequest) {\n    this._commands.delete(`${command.identifier}:${command.uniqueId}`);\n  }\n\n  public static get(identifier: string, uniqueId?: number) {\n    return this._commands.get(`${identifier}:${uniqueId}`);\n  }\n}\n"]}