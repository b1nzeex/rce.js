{"version":3,"file":"responseHandler.js","sourceRoot":"","sources":["../../src/commands/responseHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { RCEEvent, type IServer, GamePlatform } from \"../types\";\nimport type RCEManager from \"../manager\";\nimport { RegularExpressions } from \"../data/regularExpressions\";\nimport { QuickChat, QuickChatChannel } from \"../data/quickChat\";\nimport { EVENTS } from \"../data/events\";\nimport { getKill, PlayerKillType } from \"../data/playerKill\";\n\nexport default class ResponseHandler {\n  public static handle(manager: RCEManager, server: IServer, message: string) {\n    // Emit the message event\n    manager.emit(RCEEvent.Message, {\n      server,\n      message,\n    });\n\n    // Event: Vending Machine Name\n    const vendingMachineNameMatch = message.match(\n      RegularExpressions.VendingMachineName\n    );\n    if (vendingMachineNameMatch) {\n      const player = manager.getOrCreatePlayer(\n        server.identifier,\n        vendingMachineNameMatch[1]\n      );\n      manager.emit(RCEEvent.VendingMachineName, {\n        server,\n        player,\n        oldName: vendingMachineNameMatch[2],\n        newName: vendingMachineNameMatch[3],\n      });\n    }\n\n    // Event: Quick Chat\n    const quickChatMatch = message.match(RegularExpressions.QuickChat);\n    if (quickChatMatch) {\n      const player = manager.getOrCreatePlayer(\n        server.identifier,\n        quickChatMatch[3]\n      );\n      manager.emit(RCEEvent.QuickChat, {\n        server,\n        type: quickChatMatch[2] as QuickChatChannel,\n        player,\n        message: quickChatMatch[4] as QuickChat,\n      });\n    }\n\n    // Event: Player Suicide\n    if (message.includes(\"was suicide by Suicide\")) {\n      const ign = message.split(\" was suicide by Suicide\")[0];\n      const player = manager.getOrCreatePlayer(server.identifier, ign);\n\n      manager.emit(RCEEvent.PlayerSuicide, {\n        server,\n        player,\n      });\n    }\n\n    // Event: Player Respawned\n    if (message.includes(\"has entered the game\")) {\n      const ign = message.split(\" [\")[0];\n      const platform: GamePlatform = message.includes(\"[SCARLETT]\")\n        ? GamePlatform.XBOX\n        : GamePlatform.Playstation;\n\n      // Create or get player and update platform\n      const player = manager.getOrCreatePlayer(server.identifier, ign, {\n        platform,\n      });\n\n      manager.emit(RCEEvent.PlayerRespawned, {\n        server,\n        player,\n        platform,\n      });\n    }\n\n    // Event: Custom Zone Created\n    const customZoneCreatedMatch = message.match(\n      RegularExpressions.CustomZoneCreated\n    );\n    if (customZoneCreatedMatch) {\n      manager.emit(RCEEvent.CustomZoneCreated, {\n        server,\n        zone: customZoneCreatedMatch[1],\n      });\n    }\n\n    // Event: Custom Zone Removed\n    const customZoneRemovedMatch = message.match(\n      RegularExpressions.CustomZoneRemoved\n    );\n    if (customZoneRemovedMatch) {\n      manager.emit(RCEEvent.CustomZoneRemoved, {\n        server,\n        zone: customZoneRemovedMatch[1],\n      });\n    }\n\n    // Event: Player Role Add / Player Banned\n    if (message.includes(\"Added\")) {\n      const playerRoleAddMatch = message.match(\n        RegularExpressions.PlayerRoleAdd\n      );\n\n      if (playerRoleAddMatch) {\n        const admin = manager.getOrCreatePlayer(\n          server.identifier,\n          playerRoleAddMatch[1]\n        );\n        const player = manager.getOrCreatePlayer(\n          server.identifier,\n          playerRoleAddMatch[2]\n        );\n\n        manager.emit(RCEEvent.PlayerRoleAdd, {\n          server,\n          admin: playerRoleAddMatch[1] === \"SERVER\" ? undefined : admin,\n          player,\n          role: playerRoleAddMatch[3],\n        });\n      }\n\n      const playerBannedMatch = message.match(RegularExpressions.PlayerBanned);\n      if (playerBannedMatch) {\n        const admin = manager.getOrCreatePlayer(\n          server.identifier,\n          playerBannedMatch[1]\n        );\n        const player = manager.getOrCreatePlayer(\n          server.identifier,\n          playerBannedMatch[2]\n        );\n\n        manager.emit(RCEEvent.PlayerBanned, {\n          server,\n          admin: playerBannedMatch[1] === \"SERVER\" ? undefined : admin,\n          player,\n        });\n      }\n    }\n\n    // Event: Player Role Remove / Player Unbanned\n    if (message.includes(\"Removed\")) {\n      const playerRoleRemoveMatch = message.match(\n        RegularExpressions.PlayerRoleRemove\n      );\n      if (playerRoleRemoveMatch) {\n        const admin = manager.getOrCreatePlayer(\n          server.identifier,\n          playerRoleRemoveMatch[1]\n        );\n        const player = manager.getOrCreatePlayer(\n          server.identifier,\n          playerRoleRemoveMatch[2]\n        );\n\n        manager.emit(RCEEvent.PlayerRoleRemove, {\n          server,\n          admin: playerRoleRemoveMatch[1] === \"SERVER\" ? undefined : admin,\n          player,\n          role: playerRoleRemoveMatch[3],\n        });\n      }\n\n      const playerUnbannedMatch = message.match(\n        RegularExpressions.PlayerUnbanned\n      );\n      if (playerUnbannedMatch) {\n        const admin = manager.getOrCreatePlayer(\n          server.identifier,\n          playerUnbannedMatch[1]\n        );\n        const player = manager.getOrCreatePlayer(\n          server.identifier,\n          playerUnbannedMatch[2]\n        );\n\n        manager.emit(RCEEvent.PlayerUnbanned, {\n          server,\n          admin: playerUnbannedMatch[1] === \"SERVER\" ? undefined : admin,\n          player,\n        });\n      }\n    }\n\n    // Event: Item Spawn\n    const itemSpawnMatch = message.match(RegularExpressions.ItemSpawn);\n    if (itemSpawnMatch) {\n      const player = manager.getOrCreatePlayer(\n        server.identifier,\n        itemSpawnMatch[1]\n      );\n      manager.emit(RCEEvent.ItemSpawn, {\n        server,\n        player,\n        item: itemSpawnMatch[3],\n        quantity: parseInt(itemSpawnMatch[2]),\n      });\n    }\n\n    // Event: Note Edit\n    const noteEditMatch = message.match(RegularExpressions.NoteEdit);\n    if (noteEditMatch) {\n      const oldContent = noteEditMatch[2].trim().split(\"\\\\n\")[0];\n      const newContent = noteEditMatch[3].trim().split(\"\\\\n\")[0];\n\n      if (newContent.length > 0 && newContent !== oldContent) {\n        const player = manager.getOrCreatePlayer(\n          server.identifier,\n          noteEditMatch[1]\n        );\n        manager.emit(RCEEvent.NoteEdit, {\n          server,\n          player,\n          oldContent,\n          newContent,\n        });\n      }\n    }\n\n    // Event: Team Create\n    const teamCreateMatch = message.match(RegularExpressions.TeamCreate);\n    if (teamCreateMatch) {\n      const teamId = parseInt(teamCreateMatch[2]);\n      const owner = teamCreateMatch[1];\n\n      // Create or get player and add team to teams list\n      const serverData = manager.getServer(server.identifier);\n      let leaderPlayer;\n      if (serverData) {\n        const team = {\n          id: teamId,\n          leader: null, // Will be set below\n          members: [],\n        };\n\n        leaderPlayer = manager.getOrCreatePlayer(server.identifier, owner, {\n          team,\n        });\n        team.leader = leaderPlayer;\n        team.members = [leaderPlayer];\n\n        serverData.teams.push(team);\n        manager.updateServer(serverData);\n      } else {\n        leaderPlayer = manager.getOrCreatePlayer(server.identifier, owner);\n      }\n\n      manager.emit(RCEEvent.TeamCreated, {\n        server,\n        team: serverData?.teams.find((t) => t.id === teamId) || {\n          id: teamId,\n          leader: leaderPlayer,\n          members: [leaderPlayer],\n        },\n      });\n    }\n\n    // Event: Team Join\n    const teamJoinMatch = message.match(RegularExpressions.TeamJoin);\n    if (teamJoinMatch) {\n      const teamId = parseInt(teamJoinMatch[3]);\n      const ign = teamJoinMatch[1];\n\n      // Create or get player and add to team members list\n      const serverData = manager.getServer(server.identifier);\n      let joiningPlayer;\n\n      if (serverData) {\n        const team = serverData.teams.find((t) => t.id === teamId);\n        if (team && !team.members.some((member) => member.ign === ign)) {\n          joiningPlayer = manager.getOrCreatePlayer(server.identifier, ign, {\n            team,\n          });\n\n          team.members.push(joiningPlayer);\n          manager.updateServer(serverData);\n        } else {\n          joiningPlayer = manager.getOrCreatePlayer(server.identifier, ign);\n        }\n      } else {\n        joiningPlayer = manager.getOrCreatePlayer(server.identifier, ign);\n      }\n\n      const team = serverData?.teams.find((t) => t.id === teamId);\n      manager.emit(RCEEvent.TeamJoin, {\n        server,\n        team: team || {\n          id: teamId,\n          leader: joiningPlayer,\n          members: [joiningPlayer],\n        },\n        player: joiningPlayer,\n      });\n    }\n\n    // Event: Team Leave\n    const teamLeaveMatch = message.match(RegularExpressions.TeamLeave);\n    if (teamLeaveMatch) {\n      const ign = teamLeaveMatch[1];\n      const teamId = parseInt(teamLeaveMatch[3]);\n\n      // Create or get player and remove from team members list\n      const serverData = manager.getServer(server.identifier);\n      if (serverData) {\n        const team = serverData.teams.find((t) => t.id === teamId);\n        if (team) {\n          team.members = team.members.filter((member) => member.ign !== ign);\n          manager.getOrCreatePlayer(server.identifier, ign, { team: null });\n\n          // If team is empty, remove it\n          if (team.members.length === 0) {\n            serverData.teams = serverData.teams.filter((t) => t.id !== teamId);\n          }\n\n          manager.updateServer(serverData);\n        }\n      }\n\n      const leavingPlayer = manager.getOrCreatePlayer(server.identifier, ign, {\n        team: null,\n      });\n\n      const team = serverData?.teams.find((t) => t.id === teamId);\n      manager.emit(RCEEvent.TeamLeave, {\n        server,\n        team: team || {\n          id: teamId,\n          leader: leavingPlayer,\n          members: [],\n        },\n        player: leavingPlayer,\n      });\n    }\n\n    // Event: Team Invite\n    const teamInviteMatch = message.match(RegularExpressions.TeamInvite);\n    if (teamInviteMatch) {\n      const teamId = parseInt(teamInviteMatch[3]);\n      const player = manager.getOrCreatePlayer(\n        server.identifier,\n        teamInviteMatch[2]\n      );\n\n      const serverData = manager.getServer(server.identifier);\n      const team = serverData?.teams.find((t) => t.id === teamId);\n\n      manager.emit(RCEEvent.TeamInvite, {\n        server,\n        team: team || {\n          id: teamId,\n          leader: player,\n          members: [],\n        },\n        player,\n      });\n    }\n\n    // Event: Team Invite Cancel\n    const teamInviteCancelMatch = message.match(\n      RegularExpressions.TeamInviteCancel\n    );\n    if (teamInviteCancelMatch) {\n      const teamId = parseInt(teamInviteMatch[3]);\n      const player = manager.getOrCreatePlayer(\n        server.identifier,\n        teamInviteCancelMatch[1]\n      );\n\n      const serverData = manager.getServer(server.identifier);\n      const team = serverData?.teams.find((t) => t.id === teamId);\n\n      manager.emit(RCEEvent.TeamInviteCancel, {\n        server,\n        team: team || {\n          id: teamId,\n          leader: player,\n          members: [],\n        },\n        player,\n      });\n    }\n\n    // Event: Team Promoted\n    const teamPromotedMatch = message.match(RegularExpressions.TeamPromoted);\n    if (teamPromotedMatch) {\n      const teamId = parseInt(teamPromotedMatch[3]);\n      const oldOwner = teamPromotedMatch[1];\n      const newOwner = teamPromotedMatch[2];\n\n      // Update team leadership\n      const serverData = manager.getServer(server.identifier);\n      if (serverData) {\n        const team = serverData.teams.find((t) => t.id === teamId);\n        if (team) {\n          // Update the team's leader\n          team.leader = manager.getOrCreatePlayer(server.identifier, newOwner, {\n            team,\n          });\n          manager.updateServer(serverData);\n        }\n      }\n\n      const oldOwnerPlayer = manager.getOrCreatePlayer(\n        server.identifier,\n        oldOwner\n      );\n      const newOwnerPlayer = manager.getOrCreatePlayer(\n        server.identifier,\n        newOwner\n      );\n\n      const team = serverData?.teams.find((t) => t.id === teamId);\n      manager.emit(RCEEvent.TeamPromoted, {\n        server,\n        team: team || {\n          id: teamId,\n          leader: newOwnerPlayer,\n          members: [],\n        },\n        oldOwner: oldOwnerPlayer,\n        newOwner: newOwnerPlayer,\n      });\n    }\n\n    // Event: Kit Spawn\n    const kitSpawnMatch = message.match(RegularExpressions.KitSpawn);\n    if (kitSpawnMatch) {\n      const player = manager.getOrCreatePlayer(\n        server.identifier,\n        kitSpawnMatch[1]\n      );\n\n      manager.emit(RCEEvent.KitSpawn, {\n        server,\n        admin: undefined,\n        player,\n        kit: kitSpawnMatch[2],\n      });\n    }\n\n    // Event: Kit Give\n    const kitGiveMatch = message.match(RegularExpressions.KitGive);\n    if (kitGiveMatch) {\n      const player = manager.getOrCreatePlayer(\n        server.identifier,\n        kitGiveMatch[2]\n      );\n      const admin = manager.getOrCreatePlayer(\n        server.identifier,\n        kitGiveMatch[1]\n      );\n\n      manager.emit(RCEEvent.KitSpawn, {\n        server,\n        admin,\n        player,\n        kit: kitGiveMatch[3],\n      });\n    }\n\n    // Event: Event Start\n    if (message.startsWith(\"[EVENT\")) {\n      for (const [key, options] of Object.entries(EVENTS)) {\n        if (message.includes(key)) {\n          manager.emit(RCEEvent.EventStart, {\n            server,\n            event: options.name as any,\n            special: options.special,\n          });\n        }\n      }\n    }\n\n    // Event: Player Kill\n    if (message.includes(\" was killed by \")) {\n      const [victim, killer] = message\n        .split(\" was killed by \")\n        .map((str) => str.trim());\n\n      const victimData = getKill(victim);\n      const killerData = getKill(killer);\n\n      if (victimData.type === PlayerKillType.Player) {\n        victimData.player = manager.getOrCreatePlayer(\n          server.identifier,\n          victimData.name\n        );\n      }\n\n      if (killerData.type === PlayerKillType.Player) {\n        killerData.player = manager.getOrCreatePlayer(\n          server.identifier,\n          killerData.name\n        );\n      }\n\n      manager.emit(RCEEvent.PlayerKill, {\n        server,\n        victim: victimData,\n        killer: killerData,\n      });\n    }\n\n    // Event: Server Saving\n    if (message.startsWith(\"[ SAVE ]\")) {\n      const serverSavingMatch = message.match(RegularExpressions.ServerSaving);\n      if (serverSavingMatch) {\n        manager.emit(RCEEvent.ServerSaving, {\n          server,\n          entities: parseInt(serverSavingMatch[1]),\n        });\n      }\n    }\n  }\n}\n"]}