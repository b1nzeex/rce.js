{"version":3,"file":"responseHandler.js","sourceRoot":"","sources":["../../src/commands/responseHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { RCEEvent, type IServer, GamePlatform } from \"../types\";\r\nimport type RCEManager from \"../manager\";\r\nimport { RegularExpressions } from \"../data/regularExpressions\";\r\nimport { QuickChat, QuickChatChannel } from \"../data/quickChat\";\r\nimport { EVENTS } from \"../data/events\";\r\nimport { getKill, PlayerKillType } from \"../data/playerKill\";\r\n\r\nexport default class ResponseHandler {\r\n  public static handle(manager: RCEManager, server: IServer, message: string) {\r\n    // Emit the message event\r\n    manager.emit(RCEEvent.Message, {\r\n      server,\r\n      message,\r\n    });\r\n\r\n    // Event: Vending Machine Name\r\n    const vendingMachineNameMatch = message.match(\r\n      RegularExpressions.VendingMachineName\r\n    );\r\n    if (vendingMachineNameMatch) {\r\n      const player = manager.getOrCreatePlayer(\r\n        server.identifier,\r\n        vendingMachineNameMatch[1]\r\n      );\r\n      manager.emit(RCEEvent.VendingMachineName, {\r\n        server,\r\n        player,\r\n        oldName: vendingMachineNameMatch[2],\r\n        newName: vendingMachineNameMatch[3],\r\n      });\r\n    }\r\n\r\n    // Event: Quick Chat\r\n    const quickChatMatch = message.match(RegularExpressions.QuickChat);\r\n    if (quickChatMatch) {\r\n      const player = manager.getOrCreatePlayer(\r\n        server.identifier,\r\n        quickChatMatch[3]\r\n      );\r\n      manager.emit(RCEEvent.QuickChat, {\r\n        server,\r\n        type: quickChatMatch[2] as QuickChatChannel,\r\n        player,\r\n        message: quickChatMatch[4] as QuickChat,\r\n      });\r\n    }\r\n\r\n    // Event: Player Suicide\r\n    if (message.includes(\"was suicide by Suicide\")) {\r\n      const ign = message.split(\" was suicide by Suicide\")[0];\r\n      const player = manager.getOrCreatePlayer(server.identifier, ign);\r\n\r\n      manager.emit(RCEEvent.PlayerSuicide, {\r\n        server,\r\n        player,\r\n      });\r\n    }\r\n\r\n    // Event: Player Respawned\r\n    if (message.includes(\"has entered the game\")) {\r\n      const ign = message.split(\" [\")[0];\r\n      const platform: GamePlatform = message.includes(\"[SCARLETT]\")\r\n        ? GamePlatform.XBOX\r\n        : GamePlatform.Playstation;\r\n\r\n      // Create or get player and update platform\r\n      const player = manager.getOrCreatePlayer(server.identifier, ign, {\r\n        platform,\r\n      });\r\n\r\n      manager.emit(RCEEvent.PlayerRespawned, {\r\n        server,\r\n        player,\r\n        platform,\r\n      });\r\n    }\r\n\r\n    // Event: Custom Zone Created\r\n    const customZoneCreatedMatch = message.match(\r\n      RegularExpressions.CustomZoneCreated\r\n    );\r\n    if (customZoneCreatedMatch) {\r\n      manager.emit(RCEEvent.CustomZoneCreated, {\r\n        server,\r\n        zone: customZoneCreatedMatch[1],\r\n      });\r\n    }\r\n\r\n    // Event: Custom Zone Removed\r\n    const customZoneRemovedMatch = message.match(\r\n      RegularExpressions.CustomZoneRemoved\r\n    );\r\n    if (customZoneRemovedMatch) {\r\n      manager.emit(RCEEvent.CustomZoneRemoved, {\r\n        server,\r\n        zone: customZoneRemovedMatch[1],\r\n      });\r\n    }\r\n\r\n    // Event: Player Role Add / Player Banned\r\n    if (message.includes(\"Added\")) {\r\n      const playerRoleAddMatch = message.match(\r\n        RegularExpressions.PlayerRoleAdd\r\n      );\r\n\r\n      if (playerRoleAddMatch) {\r\n        const admin = manager.getOrCreatePlayer(\r\n          server.identifier,\r\n          playerRoleAddMatch[1]\r\n        );\r\n        const player = manager.getOrCreatePlayer(\r\n          server.identifier,\r\n          playerRoleAddMatch[2]\r\n        );\r\n\r\n        manager.emit(RCEEvent.PlayerRoleAdd, {\r\n          server,\r\n          admin: playerRoleAddMatch[1] === \"SERVER\" ? undefined : admin,\r\n          player,\r\n          role: playerRoleAddMatch[3],\r\n        });\r\n      }\r\n\r\n      const playerBannedMatch = message.match(RegularExpressions.PlayerBanned);\r\n      if (playerBannedMatch) {\r\n        const admin = manager.getOrCreatePlayer(\r\n          server.identifier,\r\n          playerBannedMatch[1]\r\n        );\r\n        const player = manager.getOrCreatePlayer(\r\n          server.identifier,\r\n          playerBannedMatch[2]\r\n        );\r\n\r\n        manager.emit(RCEEvent.PlayerBanned, {\r\n          server,\r\n          admin: playerBannedMatch[1] === \"SERVER\" ? undefined : admin,\r\n          player,\r\n        });\r\n      }\r\n    }\r\n\r\n    // Event: Player Role Remove / Player Unbanned\r\n    if (message.includes(\"Removed\")) {\r\n      const playerRoleRemoveMatch = message.match(\r\n        RegularExpressions.PlayerRoleRemove\r\n      );\r\n      if (playerRoleRemoveMatch) {\r\n        const admin = manager.getOrCreatePlayer(\r\n          server.identifier,\r\n          playerRoleRemoveMatch[1]\r\n        );\r\n        const player = manager.getOrCreatePlayer(\r\n          server.identifier,\r\n          playerRoleRemoveMatch[2]\r\n        );\r\n\r\n        manager.emit(RCEEvent.PlayerRoleRemove, {\r\n          server,\r\n          admin: playerRoleRemoveMatch[1] === \"SERVER\" ? undefined : admin,\r\n          player,\r\n          role: playerRoleRemoveMatch[3],\r\n        });\r\n      }\r\n\r\n      const playerUnbannedMatch = message.match(\r\n        RegularExpressions.PlayerUnbanned\r\n      );\r\n      if (playerUnbannedMatch) {\r\n        const admin = manager.getOrCreatePlayer(\r\n          server.identifier,\r\n          playerUnbannedMatch[1]\r\n        );\r\n        const player = manager.getOrCreatePlayer(\r\n          server.identifier,\r\n          playerUnbannedMatch[2]\r\n        );\r\n\r\n        manager.emit(RCEEvent.PlayerUnbanned, {\r\n          server,\r\n          admin: playerUnbannedMatch[1] === \"SERVER\" ? undefined : admin,\r\n          player,\r\n        });\r\n      }\r\n    }\r\n\r\n    // Event: Item Spawn\r\n    const itemSpawnMatch = message.match(RegularExpressions.ItemSpawn);\r\n    if (itemSpawnMatch) {\r\n      const player = manager.getOrCreatePlayer(\r\n        server.identifier,\r\n        itemSpawnMatch[1]\r\n      );\r\n      manager.emit(RCEEvent.ItemSpawn, {\r\n        server,\r\n        player,\r\n        item: itemSpawnMatch[3],\r\n        quantity: parseInt(itemSpawnMatch[2]),\r\n      });\r\n    }\r\n\r\n    // Event: Note Edit\r\n    const noteEditMatch = message.match(RegularExpressions.NoteEdit);\r\n    if (noteEditMatch) {\r\n      const oldContent = noteEditMatch[2].trim().split(\"\\\\n\")[0];\r\n      const newContent = noteEditMatch[3].trim().split(\"\\\\n\")[0];\r\n\r\n      if (newContent.length > 0 && newContent !== oldContent) {\r\n        const player = manager.getOrCreatePlayer(\r\n          server.identifier,\r\n          noteEditMatch[1]\r\n        );\r\n        manager.emit(RCEEvent.NoteEdit, {\r\n          server,\r\n          player,\r\n          oldContent,\r\n          newContent,\r\n        });\r\n      }\r\n    }\r\n\r\n    // Event: Team Create\r\n    const teamCreateMatch = message.match(RegularExpressions.TeamCreate);\r\n    if (teamCreateMatch) {\r\n      const teamId = parseInt(teamCreateMatch[2]);\r\n      const owner = teamCreateMatch[1];\r\n\r\n      // Create or get player and add team to teams list\r\n      const serverData = manager.getServer(server.identifier);\r\n      let leaderPlayer;\r\n      if (serverData) {\r\n        const team = {\r\n          id: teamId,\r\n          leader: null, // Will be set below\r\n          members: [],\r\n        };\r\n\r\n        leaderPlayer = manager.getOrCreatePlayer(server.identifier, owner, {\r\n          team,\r\n        });\r\n        team.leader = leaderPlayer;\r\n        team.members = [leaderPlayer];\r\n\r\n        serverData.teams.push(team);\r\n        manager.updateServer(serverData);\r\n      } else {\r\n        leaderPlayer = manager.getOrCreatePlayer(server.identifier, owner);\r\n      }\r\n\r\n      manager.emit(RCEEvent.TeamCreated, {\r\n        server,\r\n        team: serverData?.teams.find((t) => t.id === teamId) || {\r\n          id: teamId,\r\n          leader: leaderPlayer,\r\n          members: [leaderPlayer],\r\n        },\r\n      });\r\n    }\r\n\r\n    // Event: Team Join\r\n    const teamJoinMatch = message.match(RegularExpressions.TeamJoin);\r\n    if (teamJoinMatch) {\r\n      const teamId = parseInt(teamJoinMatch[3]);\r\n      const ign = teamJoinMatch[1];\r\n\r\n      // Create or get player and add to team members list\r\n      const serverData = manager.getServer(server.identifier);\r\n      let joiningPlayer;\r\n\r\n      if (serverData) {\r\n        const team = serverData.teams.find((t) => t.id === teamId);\r\n        if (team && !team.members.some((member) => member.ign === ign)) {\r\n          joiningPlayer = manager.getOrCreatePlayer(server.identifier, ign, {\r\n            team,\r\n          });\r\n\r\n          team.members.push(joiningPlayer);\r\n          manager.updateServer(serverData);\r\n        } else {\r\n          joiningPlayer = manager.getOrCreatePlayer(server.identifier, ign);\r\n        }\r\n      } else {\r\n        joiningPlayer = manager.getOrCreatePlayer(server.identifier, ign);\r\n      }\r\n\r\n      const team = serverData?.teams.find((t) => t.id === teamId);\r\n      manager.emit(RCEEvent.TeamJoin, {\r\n        server,\r\n        team: team || {\r\n          id: teamId,\r\n          leader: joiningPlayer,\r\n          members: [joiningPlayer],\r\n        },\r\n        player: joiningPlayer,\r\n      });\r\n    }\r\n\r\n    // Event: Team Leave\r\n    const teamLeaveMatch = message.match(RegularExpressions.TeamLeave);\r\n    if (teamLeaveMatch) {\r\n      const ign = teamLeaveMatch[1];\r\n      const teamId = parseInt(teamLeaveMatch[3]);\r\n\r\n      // Create or get player and remove from team members list\r\n      const serverData = manager.getServer(server.identifier);\r\n      if (serverData) {\r\n        const team = serverData.teams.find((t) => t.id === teamId);\r\n        if (team) {\r\n          team.members = team.members.filter((member) => member.ign !== ign);\r\n          manager.getOrCreatePlayer(server.identifier, ign, { team: null });\r\n\r\n          // If team is empty, remove it\r\n          if (team.members.length === 0) {\r\n            serverData.teams = serverData.teams.filter((t) => t.id !== teamId);\r\n          }\r\n\r\n          manager.updateServer(serverData);\r\n        }\r\n      }\r\n\r\n      const leavingPlayer = manager.getOrCreatePlayer(server.identifier, ign, {\r\n        team: null,\r\n      });\r\n\r\n      const team = serverData?.teams.find((t) => t.id === teamId);\r\n      manager.emit(RCEEvent.TeamLeave, {\r\n        server,\r\n        team: team || {\r\n          id: teamId,\r\n          leader: leavingPlayer,\r\n          members: [],\r\n        },\r\n        player: leavingPlayer,\r\n      });\r\n    }\r\n\r\n    // Event: Team Invite\r\n    const teamInviteMatch = message.match(RegularExpressions.TeamInvite);\r\n    if (teamInviteMatch) {\r\n      const teamId = parseInt(teamInviteMatch[3]);\r\n      const player = manager.getOrCreatePlayer(\r\n        server.identifier,\r\n        teamInviteMatch[2]\r\n      );\r\n\r\n      const serverData = manager.getServer(server.identifier);\r\n      const team = serverData?.teams.find((t) => t.id === teamId);\r\n\r\n      manager.emit(RCEEvent.TeamInvite, {\r\n        server,\r\n        team: team || {\r\n          id: teamId,\r\n          leader: player,\r\n          members: [],\r\n        },\r\n        player,\r\n      });\r\n    }\r\n\r\n    // Event: Team Invite Cancel\r\n    const teamInviteCancelMatch = message.match(\r\n      RegularExpressions.TeamInviteCancel\r\n    );\r\n    if (teamInviteCancelMatch) {\r\n      const teamId = parseInt(teamInviteMatch[3]);\r\n      const player = manager.getOrCreatePlayer(\r\n        server.identifier,\r\n        teamInviteCancelMatch[1]\r\n      );\r\n\r\n      const serverData = manager.getServer(server.identifier);\r\n      const team = serverData?.teams.find((t) => t.id === teamId);\r\n\r\n      manager.emit(RCEEvent.TeamInviteCancel, {\r\n        server,\r\n        team: team || {\r\n          id: teamId,\r\n          leader: player,\r\n          members: [],\r\n        },\r\n        player,\r\n      });\r\n    }\r\n\r\n    // Event: Team Promoted\r\n    const teamPromotedMatch = message.match(RegularExpressions.TeamPromoted);\r\n    if (teamPromotedMatch) {\r\n      const teamId = parseInt(teamPromotedMatch[3]);\r\n      const oldOwner = teamPromotedMatch[1];\r\n      const newOwner = teamPromotedMatch[2];\r\n\r\n      // Update team leadership\r\n      const serverData = manager.getServer(server.identifier);\r\n      if (serverData) {\r\n        const team = serverData.teams.find((t) => t.id === teamId);\r\n        if (team) {\r\n          // Update the team's leader\r\n          team.leader = manager.getOrCreatePlayer(server.identifier, newOwner, {\r\n            team,\r\n          });\r\n          manager.updateServer(serverData);\r\n        }\r\n      }\r\n\r\n      const oldOwnerPlayer = manager.getOrCreatePlayer(\r\n        server.identifier,\r\n        oldOwner\r\n      );\r\n      const newOwnerPlayer = manager.getOrCreatePlayer(\r\n        server.identifier,\r\n        newOwner\r\n      );\r\n\r\n      const team = serverData?.teams.find((t) => t.id === teamId);\r\n      manager.emit(RCEEvent.TeamPromoted, {\r\n        server,\r\n        team: team || {\r\n          id: teamId,\r\n          leader: newOwnerPlayer,\r\n          members: [],\r\n        },\r\n        oldOwner: oldOwnerPlayer,\r\n        newOwner: newOwnerPlayer,\r\n      });\r\n    }\r\n\r\n    // Event: Kit Spawn\r\n    const kitSpawnMatch = message.match(RegularExpressions.KitSpawn);\r\n    if (kitSpawnMatch) {\r\n      const player = manager.getOrCreatePlayer(\r\n        server.identifier,\r\n        kitSpawnMatch[1]\r\n      );\r\n\r\n      manager.emit(RCEEvent.KitSpawn, {\r\n        server,\r\n        admin: undefined,\r\n        player,\r\n        kit: kitSpawnMatch[2],\r\n      });\r\n    }\r\n\r\n    // Event: Kit Give\r\n    const kitGiveMatch = message.match(RegularExpressions.KitGive);\r\n    if (kitGiveMatch) {\r\n      const player = manager.getOrCreatePlayer(\r\n        server.identifier,\r\n        kitGiveMatch[2]\r\n      );\r\n      const admin = manager.getOrCreatePlayer(\r\n        server.identifier,\r\n        kitGiveMatch[1]\r\n      );\r\n\r\n      manager.emit(RCEEvent.KitSpawn, {\r\n        server,\r\n        admin,\r\n        player,\r\n        kit: kitGiveMatch[3],\r\n      });\r\n    }\r\n\r\n    // Event: Event Start\r\n    if (message.startsWith(\"[EVENT\")) {\r\n      for (const [key, options] of Object.entries(EVENTS)) {\r\n        if (message.includes(key)) {\r\n          manager.emit(RCEEvent.EventStart, {\r\n            server,\r\n            event: options.name as any,\r\n            special: options.special,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    // Event: Player Kill\r\n    if (message.includes(\" was killed by \")) {\r\n      const [victim, killer] = message\r\n        .split(\" was killed by \")\r\n        .map((str) => str.trim());\r\n\r\n      const victimData = getKill(victim);\r\n      const killerData = getKill(killer);\r\n\r\n      if (victimData.type === PlayerKillType.Player) {\r\n        victimData.player = manager.getOrCreatePlayer(\r\n          server.identifier,\r\n          victimData.name\r\n        );\r\n      }\r\n\r\n      if (killerData.type === PlayerKillType.Player) {\r\n        killerData.player = manager.getOrCreatePlayer(\r\n          server.identifier,\r\n          killerData.name\r\n        );\r\n      }\r\n\r\n      manager.emit(RCEEvent.PlayerKill, {\r\n        server,\r\n        victim: victimData,\r\n        killer: killerData,\r\n      });\r\n    }\r\n\r\n    // Event: Server Saving\r\n    if (message.startsWith(\"[ SAVE ]\")) {\r\n      const serverSavingMatch = message.match(RegularExpressions.ServerSaving);\r\n      if (serverSavingMatch) {\r\n        manager.emit(RCEEvent.ServerSaving, {\r\n          server,\r\n          entities: parseInt(serverSavingMatch[1]),\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}